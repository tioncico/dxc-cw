<?php


namespace UnitTest\Common;


use App\HttpController\Api\Common\CommonBase;
use App\HttpController\Api\User\Auth;
use App\HttpController\Api\User\Base;
use App\Model\User\UserModel;
use Curl\Curl;
use UnitTest\BaseTest;
use UnitTest\Utility\DataCreate;

class CommonBaseTest extends BaseTest
{
    protected $apiBase = 'http://127.0.0.1:9501/Api/Common';
    protected $userLoginUrl = 'http://127.0.0.1:9501/Api/User/Auth/loginByPassword';

    protected $curl;
    protected $modelName = '';
    /**
     * @var $userBean UserModel
     */
    protected $userBean;
    protected $user = [
        'account'  => 'zxc',
        'password' => 'e10adc3949ba59abbe56e057f20f883e',
    ];
    /**
     * @var mixed|null
     */
    protected $token;
    /**
     * @var $dataCreate DataCreate
     */
    protected $dataCreate;

    public function login()
    {
//        $url = 'http://main-api.laboomvideo.com/Api/User/Auth/loginByPassword';
//        $url = 'http://192.168.0.206:9501/Api/User/Auth/loginByPassword';
        $model = UserModel::create();
        $isUser = $model->where(['account' => $this->user['account'],'password' => $this->user['password']])->get();
        if (!$isUser){
            $model->addUser($this->user['account'],$this->user['password']);
        }
        $data = [
            'account'  => $this->user['account'],
            'password' => $this->user['password'],
        ];

        $this->curl->post($this->userLoginUrl, $data);
        if ($this->curl->response) {
//            var_dump($this->curl->response);
        } else {
            echo 'Error: ' . $this->curl->errorCode . ': ' . $this->curl->errorMessage . "\n";
        }
        $this->assertTrue(!!$this->curl->response);
        $this->assertEquals(200, $this->curl->response->code);
        $this->token = $this->curl->getResponseCookie(Auth::USER_TOKEN_NAME);
        $this->userBean = new UserModel((array)$this->curl->response->result);
        $this->curl->setCookie(Auth::USER_TOKEN_NAME, $this->token);

//        var_dump($this->token);
    }

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->curl = new Curl();
    }

    protected function request($action, $data = [], $modelName = null)
    {
        $modelName = $modelName ?? $this->modelName;
        $url = $this->apiBase . '/' . $modelName . '/' . $action;
        $curl = $this->curl;
        $curl->post($url, $data);
        if ($curl->response) {
//            var_dump($curl->response);
//            var_dump(json_encode($curl->response, JSON_UNESCAPED_UNICODE));
        } else {
            echo 'Error: ' . $curl->errorCode . ': ' . $curl->errorMessage . "\n";
        }
        $this->assertTrue(!!$curl->response);
        $this->assertEquals(200, $curl->response->code, $curl->response->msg ?? json_encode($curl->response));
        return $curl->response;
    }

    protected function requestError($action, $data = [], $modelName = null)
    {
        $modelName = $modelName ?? $this->modelName;
        $url = $this->apiBase . '/' . $modelName . '/' . $action;
        $curl = $this->curl;
        $curl->post($url, $data);
        $this->assertTrue(!!$curl->response);
        return $curl->response;
    }
}
