<?php
/**
 * Created by PhpStorm.
 * User: Tioncico
 * Date: 2019/11/18 0018
 * Time: 15:02
 */

namespace EasySwoole\Oss\Tests\AliYun;

use EasySwoole\Oss\AliYun\Core\OssException;
use EasySwoole\Oss\AliYun\Model\WebsiteConfig;
use EasySwoole\Oss\AliYun\OssConst;
use PHPUnit\Framework\TestCase;

class BucketTagTest extends AliYunBaseTestCase
{
    protected $bucketName = 'tioncicoxyz';

    function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->addTestBucketName();
    }

    protected function addTestBucketName()
    {
        $bucketName = $this->bucketName;
//        $data = $this->ossClient->doesBucketExist($bucketName);
        $data = $this->client->doesBucketExist($bucketName);
        if ($data === false) {
            $data = $this->client->createBucket($bucketName);
        }
    }

    public function testGetSet()
    {
        $bucket = $this->bucketName;
        $client = Common::getOssClient();
        try {
            $tagArr = ['a' => 1, 'b' => 2];
            $response = $client->putBucketTags($bucket, $tagArr);
//            var_dump($response);
            $this->assertTrue(!!$response);
            $response = $client->getBucketTags($bucket);
//            var_dump($response);
            $this->assertTrue(!!$response);
            $response = $client->deleteBucketTags($bucket);
//            var_dump($response);
            $this->assertEquals($response, []);
            $response = $client->getBucketTags($bucket);
//            var_dump($response);
            $this->assertEquals($response, []);

        } catch (OssException $e) {
            $this->assertFalse(True, $e->getMessage());
        }
    }

}
