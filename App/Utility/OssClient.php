<?phpnamespace App\Utility;use AlibabaCloud\Client\AlibabaCloud;use AlibabaCloud\Client\Exception\ClientException;use AlibabaCloud\Client\Exception\ServerException;use AlibabaCloud\Sts\Sts;use EasySwoole\Component\Singleton;use EasySwoole\Http\Message\Status;use EasySwoole\Oss\AliYun\OssConst;use phpDocumentor\Reflection\Element;use EasySwoole\EasySwoole\Config;class OssClient{    private $ossKey;    private $ossSecret;    private $ossEndPoint;    private $ossBucket;    private $roleArn;    private $region;    use Singleton;    function __construct()    {        $config = \EasySwoole\EasySwoole\Config::getInstance()->getConf('ALI_OSS');        $this->ossKey = $config['KEY'];        $this->ossBucket = $config['BUCKET'];        $this->ossSecret = $config['SECRET'];        $this->ossEndPoint = $config['END_POINT'];        $this->region = $config['REGION'];        $this->roleArn = $config['ROLE_ARN'];    }    /**     * 获取Oss Client     */    public function aliOssClient(): \EasySwoole\Oss\AliYun\OssClient    {        $config = new \EasySwoole\Oss\AliYun\Config([            'accessKeyId'     => $this->ossKey,            'accessKeySecret' => $this->ossSecret,            'endpoint'        => $this->ossEndPoint,        ]);        return new \EasySwoole\Oss\AliYun\OssClient($config);    }    public function getStsToken()    {        // 设置全局客户端        AlibabaCloud::accessKeyClient($this->ossKey, $this->ossSecret)            ->regionId($this->region)            ->asDefaultClient();        // 访问产品 APIs        $request = Sts::v20150401()->assumeRole()->withRoleArn($this->roleArn)->withRoleSessionName('client_name');        // 设置选项/参数并执行请求        $result = $request            ->request(); // 执行请求        return $result;    }    public function copyFile($path, $fileType)    {        //为了保证fileName前面不能用/        $fileName = substr($path, strripos($path, '.'));        $toObject = $fileType . '/' . date('Ymd') . '/' . date('H') . '/' . date('i') . '/' . uniqid() . mt_rand(10000,99999) . $fileName;        $ossClient = $this->aliOssClient();        if (!$ossClient->copyObject($this->ossBucket, $path, $this->ossBucket, $toObject)) {            // 若移动失败 返回false            return false;        }        return $toObject;    }    public function delFile($path)    {        $ossClient = $this->aliOssClient();        if ($ossClient->doesObjectExist($this->ossBucket, $path)) {            //删除临时目录文件            $ossClient->deleteObject($this->ossBucket, $path);        } else {            return null;        }    }    /**     * 上传文件并指定权限     * putFileAndAcl     * @param        $fileName     * @param        $fileContent     * @param string $objectAcl     * @return null     * @author tioncico     * Time: 上午11:44     */    public function putFileAndAcl($fileName,$fileContent,$objectAcl = 'public-read'){        return $this->aliOssClient()->putObject($this->ossBucket, $fileName, $fileContent, [            OssConst::OSS_HEADERS => [                OssConst::OSS_OBJECT_ACL => $objectAcl            ]        ]);    }    /**     * @return mixed     */    public function getOssKey()    {        return $this->ossKey;    }    /**     * @return mixed     */    public function getOssSecret()    {        return $this->ossSecret;    }    /**     * @return mixed     */    public function getOssEndPoint()    {        return $this->ossEndPoint;    }    /**     * @return mixed     */    public function getOssBucket()    {        return $this->ossBucket;    }    public function getVideoResolution($videoUrl){        $host = Config::getInstance()->getConf('ALI_OSS.HOST');        $objectImg = $host.'/'. $videoUrl.'?x-oss-process=video/snapshot,t_0000,f_jpg';        $img_info = getimagesize($objectImg);        if ($img_info){            $data = [                'width' =>$img_info['0'],                'height' =>$img_info['1'],            ];        }else{            $data = [                'width' =>0,                'height' =>0,            ];        }        return $data;    }}